[#ftl]
[#--

    Copyright Â© 2017 Sam Adams

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="resourceApis" type="java.util.List<com.webcohesion.enunciate.api.resources.ResourceApi>" --]
[#-- @ftlvariable name="serviceApis" type="java.util.List<com.webcohesion.enunciate.api.services.ServiceApi>" --]
[#-- @ftlvariable name="data" type="java.util.List<com.webcohesion.enunciate.api.datatype.Syntax>" --]
[#-- @ftlvariable name="title" type="java.lang.String" --]
[#-- @ftlvariable name="fileName" type="java.lang.String" --]
[#-- @ftlvariable name="copyright" type="java.lang.String" --]
[#-- @ftlvariable name="version" type="java.lang.String" --]
[#-- @ftlvariable name="applicationRoot" type="java.lang.String" --]
[#-- @ftlvariable name="intro" type="java.lang.String" --]
[@file name=fileName]
#%RAML 1.0
title: ${title}[#if intro??]
description: ${intro}[/#if][#if version??]
version: ${version}[/#if][#if applicationRoot??]
baseUrl: ${applicationRoot}[/#if]

types:
[#list data as syntax]
[#list syntax.namespaces as namespace]
[#if namespace.types?size > 0]
[#list namespace.types as type]
    ${type.label}:
        properties:
        [#list type.properties as property]
            ${property.name}:
                type: ${property.dataType.label}[#if property.description?has_content]
                description: ${property.description}[/#if]
                required: ${property.required?c}
        [/#list]
[/#list]
[/#if]
[/#list]
[/#list]

[#list resourceApis as resourceApi]
[#list resourceApi.resourceGroups as resourceGroup]
[#list resourceGroup.resources as resource]
[#list resource.methods as method]
${resource.path}:
    ${method.label}:[#if method.description?has_content]
        description: ${method.description}[/#if]
        responses:
            200:
        [#list method.responseCodes as responseCode]
            ${responseCode}:
        [/#list]
                body:
                [#list method.responseEntity.mediaTypes as mediaType]
                    ${mediaType.mediaType}:
                        type: ${mediaType.dataType.label}
                        [#if mediaType.dataType.example??]
                        example: |
                            [@indent str=mediaType.dataType.example.body num=28][/@indent]
                        [/#if]
                [/#list]
        [#if method.responseHeaders?size > 0]
        headers:
            [#list method.responseHeaders as header]
            ${header.name}
            [/#list]
        [/#if]
        [#if method.parameters?size > 0]
        [#assign queryParams = filter(method.parameters, 'query')]
        [#if queryParams?size > 0]
        queryParameters:
        [#list queryParams as parameter]
            ${parameter.name}:[#if parameter.description?has_content]
                description: ${parameter.description}[/#if]
                type: ${parameter.typeName}[#if parameter.defaultValue??]
                default: ${parameter.defaultValue}[/#if]
        [/#list]
        [/#if]
        [#assign headerParams = filter(method.parameters, 'header')]
        [#if headerParams?size > 0]
        headers:
        [#list headerParams as parameter]
            ${parameter.name}:[#if parameter.description?has_content]
                description: ${parameter.description}[/#if]
                type: ${parameter.typeLabel}[#if parameter.defaultValue??]
                default: ${parameter.defaultValue}[/#if]
        [/#list]
        [/#if]
        [/#if]
[/#list]
[/#list]
[/#list]
[/#list]

[/@file]

[#function filter params name]
    [#local result = []]
    [#if params?size >0]
        [#list params as parameter]
            [#if parameter.typeLabel == name]
                [#local result = result + [parameter]]
            [/#if]
        [/#list]
    [/#if]
    [#return result]
[/#function]

[#macro indent str num]
[#if str?has_content][#list str?split("^", "rm") as line]${""?left_pad(num)+line}[/#list][/#if]
[/#macro]